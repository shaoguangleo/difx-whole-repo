### Standard targets
FILES := mark5_stream_tmp.h mark5access_api.xml mark5access/mark5access.py
SCRIPTS := examples/m5iacorr.py examples/m5stat.py examples/m5subband.py examples/m5time.py examples/m5spec.py

all: depcheck mark5access/mark5access.py 

clean:
	rm -f $(FILES)

install: mark5access/mark5access.py
	python setup.py install
	cp $(SCRIPTS) /usr/local/bin/

### Checks

XML2PY_V := $(shell xml2py --help 2>/dev/null)
H2XML_V := $(shell h2xml --help 2>/dev/null)

depcheck:
ifndef H2XML_V
	$(error Cannot find Python ctypes utility h2xml (h2xml.py) required to parse C/C++ header file.)
endif
ifndef XML2PY_V
	$(error Cannot find Python ctypes utility xml2py (xml2py.py) required for Python interface code generation.)
endif

XML2PY_BUGCHECK_V := $(shell grep new_mark5_stream_absorb mark5access/mark5access.py 2>/dev/null)

check: 
ifndef XML2PY_BUGCHECK_V
	$(error The ctypes code generator 'xml2py' did not produce function wrappers, may need to be patched)
else
	$(info The generated Python interface seems okay.)
endif

### Convert mark5access C header into API description (XML) using 'h2xml.py' from ctypeslib

# Note: by design, h2xml.py is using C++ to convert headers. However,
# there are issues with C++ <complex> and the Python conversion.
# For this reason we create a copy of 'mark5_stream.h' to force C-only headers 
# and the C <complex.h> definition of complex numbers:
#
mark5_stream_tmp.h: ../mark5access/mark5_stream.h depcheck
	@echo "#undef __cplusplus" > mark5_stream_tmp.h
	@grep -v complex ../mark5access/mark5_stream.h >> mark5_stream_tmp.h

mark5access_api.xml: mark5_stream_tmp.h depcheck
	h2xml mark5_stream_tmp.h -o mark5access_api.xml  -I $(CURDIR)
	@rm -f mark5_stream_tmp.h


### Convert mark5access API description (XML) into Python using 'xml2py.py' from ctypeslib

# Standard flags
X2P_FLAGS := -k esf 

# Enums to include in wrapper
X2P_FLAGS += -s Mark5Format -s Mark5Blanker 

# Structs to include in wrapper
X2P_FLAGS += -s mark5_stream -s mark5_stream_generic -s mark5_format_generic -s mark5_format

# Functions to include in wrapper, select with "regular expression"
# Note: for -r <regex> to work properly xml2py.py v0.5.6 must be patched (see README)
X2P_FLAGS += -r "mark5"  

# For the code generation should use libmark5access.so from the build tree.
# The user may not yet have done a 'make install' on libmark5access.so.
X2P_FLAGS += -l ../mark5access/.libs/libmark5access.so

mark5access/mark5access.py: mark5access_api.xml
	@echo "# automatically generated by python-ctypeslib for mark5_stream.h" > mark5access/mark5access.py
	xml2py mark5access_api.xml $(X2P_FLAGS) >> mark5access/mark5access.py
	# remove the library path from the generated .py file
	sed -i "s/..\/mark5access\/.libs\///g" mark5access/mark5access.py
