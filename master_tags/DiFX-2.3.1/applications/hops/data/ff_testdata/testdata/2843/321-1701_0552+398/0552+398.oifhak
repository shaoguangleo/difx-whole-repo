$OVEX_REV;
rev = 1.5;
$GLOBAL;
    ref $EXPER = CA075;
    ref $EOP = EOP318;
$EXPER;
  def CA075;
    exper_name = CA075;
    exper_description = COREA;
    exper_num = 2843;
    PI_name = NASA;
    target_correlator = Haystack;
  enddef;
$EOP;
 def EOP318;
  TAI-UTC = 31 sec;
  A1-TAI = 0.03439 sec;
  eop_ref_epoch = 1999y318d;
  num_eop_points = 7;
  eop_interval = 24 hr;
  ut1-utc   =  0.4149  sec :  0.4136  sec :  0.4123  sec : 0.4109  sec : 0.4092 sec : 0.4075 sec : 0.4057 sec ;
  x_wobble  =  0.029  asec :  0.029  asec :  0.029  asec : 0.029  asec : 0.030 asec : 0.032 asec : 0.033 asec ;
  y_wobble  =  0.377  asec :  0.378  asec :  0.378  asec : 0.378  asec : 0.378 asec : 0.378 asec : 0.378 asec ;
 enddef;
$MODE;
  def CDP-WBCA-WB;
    ref $FREQ = CDP-WBCA-WB01:Ap:Gc:Hh:Ma:Ts:Wf;
    ref $BBC = CDP-WBCA-WB01:Ap:Hh:Ma:Ts:Wf;
    ref $BBC = CDP-WBCA-WB02:Gc;
    ref $IF = CDP-WBCA-WB01:Ap:Hh:Ma:Wf;
    ref $IF = CDP-WBCA-WB02:Gc;
    ref $IF = CDP-WBCA-WB03:Ts;
    ref $TRACKS = C1-WB01:Ap:Gc:Hh:Ma:Ts:Wf;
    ref $HEAD_POS = C1-WB01:Ap:Gc:Hh:Ma:Ts:Wf;
    ref $PASS_ORDER = C1-WB01:Ap:Gc:Hh:Ma:Ts:Wf;
    ref $ROLL = CDP-WBCA-WB01:Ap:Gc:Hh:Ma:Ts:Wf;
    ref $PHASE_CAL_DETECT = Standard:Ap:Gc:Hh:Ma:Ts:Wf;
    ref $TRACKS = Mark3A_format:Ap:Gc:Ma;
    ref $TRACKS = Mark4_format:Hh:Ts:Wf;
  enddef;
$STATION;
  def Gc;
    ref $SITE = GILCREEK;
    ref $ANTENNA = GILCREEK;
    ref $DAS = VLBA_rack;
    ref $DAS = Gc_101;
    ref $DAS = VLBA_recorder;
    ref $DAS = 1_recorder;
    ref $DAS = thin_tape;
    ref $DAS = high_density;
    ref $CLOCK = Gc;
  enddef;
  def Ma;
    ref $SITE = MATERA;
    ref $ANTENNA = MATERA;
    ref $DAS = Mark3A_rack;
    ref $DAS = Ma_119;
    ref $DAS = VLBA_recorder;
    ref $DAS = 1_recorder;
    ref $DAS = thick_tape;
    ref $DAS = high_density;
    ref $CLOCK = Ma;
  enddef;
  def Ts;
    ref $SITE = TSUKUB32;
    ref $ANTENNA = TSUKUB32;
    ref $DAS = VLBA_rack;
    ref $DAS = Ts_108;
    ref $DAS = VLBA_recorder;
    ref $DAS = 2_recorder;
    ref $DAS = thin_tape;
    ref $DAS = high_density;
    ref $CLOCK = Ts;
  enddef;
$SCHED;
  scan 321-1701_0552+398;
    start = 1999y321d17h01m10s;
    mode = CDP-WBCA-WB;
    source = 0552+398;
    station = Gc : 0 sec :    70 sec :  8579 ft : 8A : &cw : 1;
    station = Ma : 0 sec :    70 sec : 11734 ft : 9B : &n : 1;
    station = Ts : 0 sec :    70 sec :  5526 ft : 8A : &n : 1;
    fourfit_reftime = 1999y321d17h01m37s;
  endscan;
$ANTENNA;
  def GILCREEK;
    antenna_diam =  25.90 m;
    axis_type = x : yns;
    axis_offset =   yns:    7.31520 m;
    antenna_motion = x :  60.0 deg/min :     0 sec;
    antenna_motion = yns :  60.0 deg/min :     0 sec;
    pointing_sector = &n : x :  -86.0 deg :   86.0 deg : yns :  -73.5 deg :   73.5 deg;
  enddef;
  def MATERA;
    antenna_diam =  20.00 m;
    axis_type = az : el;
    axis_offset =    el:     .00000 m;
    antenna_motion = az : 120.0 deg/min :    10 sec;
    antenna_motion = el : 120.0 deg/min :    10 sec;
    pointing_sector = &n : az :  277.0 deg :  803.0 deg : el :    4.0 deg :   88.0 deg;
  enddef;
  def TSUKUB32;
    antenna_diam =  32.00 m;
    axis_type = az : el;
    axis_offset =    el:     .00000 m;
    antenna_motion = az : 180.0 deg/min :    10 sec;
    antenna_motion = el : 180.0 deg/min :    10 sec;
    pointing_sector = &n : az :   25.0 deg :  695.0 deg : el :    5.0 deg :   88.0 deg;
  enddef;
$BBC;
  def CDP-WBCA-WB01;
    BBC_assign = &BBC01 : 01 : &IF_1N;
    BBC_assign = &BBC02 : 02 : &IF_1N;
    BBC_assign = &BBC03 : 03 : &IF_1N;
    BBC_assign = &BBC04 : 04 : &IF_1N;
    BBC_assign = &BBC05 : 05 : &IF_3N;
    BBC_assign = &BBC06 : 06 : &IF_3N;
    BBC_assign = &BBC07 : 07 : &IF_3N;
    BBC_assign = &BBC08 : 08 : &IF_3N;
    BBC_assign = &BBC09 : 09 : &IF_2N;
    BBC_assign = &BBC10 : 10 : &IF_2N;
    BBC_assign = &BBC11 : 11 : &IF_2N;
    BBC_assign = &BBC12 : 12 : &IF_2N;
    BBC_assign = &BBC13 : 13 : &IF_2N;
    BBC_assign = &BBC14 : 14 : &IF_2N;
  enddef;
  def CDP-WBCA-WB02;
    BBC_assign = &BBC01 : 01 : &IF_A;
    BBC_assign = &BBC02 : 02 : &IF_A;
    BBC_assign = &BBC03 : 03 : &IF_A;
    BBC_assign = &BBC04 : 04 : &IF_A;
    BBC_assign = &BBC05 : 05 : &IF_C;
    BBC_assign = &BBC06 : 06 : &IF_C;
    BBC_assign = &BBC07 : 07 : &IF_C;
    BBC_assign = &BBC08 : 08 : &IF_C;
    BBC_assign = &BBC09 : 09 : &IF_B;
    BBC_assign = &BBC10 : 10 : &IF_B;
    BBC_assign = &BBC11 : 11 : &IF_B;
    BBC_assign = &BBC12 : 12 : &IF_B;
    BBC_assign = &BBC13 : 13 : &IF_B;
    BBC_assign = &BBC14 : 14 : &IF_B;
  enddef;
$DAS;
  def Mark3A_rack;
    electronics_rack_type = Mark3A;
  enddef;
  def VLBA_rack;
    electronics_rack_type = VLBA;
  enddef;
  def VLBA_recorder;
    record_transport_type = VLBA;
  enddef;
  def Gc_101;
    recording_system_ID = 101;
  enddef;
  def Ma_119;
    recording_system_ID = 119;
  enddef;
  def Ts_108;
    recording_system_ID = 108;
  enddef;
  def 1_recorder;
    number_drives = 1;
  enddef;
  def 2_recorder;
    number_drives = 2;
  enddef;
  def high_density;
    record_density = 56250 bpi;
  enddef;
  def thick_tape;
    tape_length = 8800 ft;
  enddef;
  def thin_tape;
    tape_length = 17400 ft;
  enddef;
$CLOCK;
 def Gc;  clock_early = 1999y320d00h00m : -7.300 usec : 1999y320d18h00m0s : 0 ; enddef;
 def Ma;  clock_early = 1999y320d00h00m : -2.614 usec : 1999y321d04h54m0s : -6.0e-13 ; enddef;
 def Ts;  clock_early = 1999y320d00h00m : -0.600 usec : 1999y320d18h00m0s : 0; enddef;
$FREQ;
  def CDP-WBCA-WB01;
    chan_def = X1R : &X : 8212.99 MHz : U : 2.000 MHz : &Ch01 : &BBC01 : &U_cal;
    chan_def = X2R : &X : 8252.99 MHz : U : 2.000 MHz : &Ch02 : &BBC02 : &U_cal;
    chan_def = X3R : &X : 8352.99 MHz : U : 2.000 MHz : &Ch03 : &BBC03 : &U_cal;
    chan_def = X4R : &X : 8512.99 MHz : U : 2.000 MHz : &Ch04 : &BBC04 : &U_cal;
    chan_def = X5R : &X : 8732.99 MHz : U : 2.000 MHz : &Ch05 : &BBC05 : &U_cal;
    chan_def = X6R : &X : 8852.99 MHz : U : 2.000 MHz : &Ch06 : &BBC06 : &U_cal;
    chan_def = X7R : &X : 8912.99 MHz : U : 2.000 MHz : &Ch07 : &BBC07 : &U_cal;
    chan_def = X8R : &X : 8932.99 MHz : U : 2.000 MHz : &Ch08 : &BBC08 : &U_cal;
    chan_def = S1R : &S : 2227.99 MHz : U : 2.000 MHz : &Ch09 : &BBC09 : &U_cal;
    chan_def = S2R : &S : 2237.99 MHz : U : 2.000 MHz : &Ch10 : &BBC10 : &U_cal;
    chan_def = S3R : &S : 2257.99 MHz : U : 2.000 MHz : &Ch11 : &BBC11 : &U_cal;
    chan_def = S4R : &S : 2312.99 MHz : U : 2.000 MHz : &Ch12 : &BBC12 : &U_cal;
    chan_def = S5R : &S : 2347.99 MHz : U : 2.000 MHz : &Ch13 : &BBC13 : &U_cal;
    chan_def = S6R : &S : 2352.99 MHz : U : 2.000 MHz : &Ch14 : &BBC14 : &U_cal;
    sample_rate = 4.0 Ms/sec;
  enddef;
$HEAD_POS;
  def C1-WB01;
    headstack_pos =  1 :  -330 um;
    headstack_pos =  2 :  -275 um;
    headstack_pos =  3 :  -220 um;
    headstack_pos =  4 :  -165 um;
    headstack_pos =  5 :  -110 um;
    headstack_pos =  6 :   -55 um;
    headstack_pos =  7 :     0 um;
    headstack_pos =  8 :    55 um;
    headstack_pos =  9 :   110 um;
    headstack_pos = 10 :   165 um;
    headstack_pos = 11 :   220 um;
    headstack_pos = 12 :   275 um;
  enddef;
$IF;
  def CDP-WBCA-WB01;
    if_def = &IF_1N : 1N : R : 8080.0 MHz : U : 1 MHz : 0 Hz;
    if_def = &IF_2N : 2N : R : 2020.0 MHz : U : 1 MHz : 0 Hz;
    if_def = &IF_3N : 3N : R : 8580.1 MHz : U : 1 MHz : 0 Hz;
  enddef;
  def CDP-WBCA-WB02;
    if_def = &IF_A : A : R : 7600.1 MHz : U : 1 MHz : 0 Hz;
    if_def = &IF_B : B : R : 1540.1 MHz : U : 1 MHz : 0 Hz;
    if_def = &IF_C : C : R : 8080.0 MHz : U : 1 MHz : 0 Hz;
  enddef;
  def CDP-WBCA-WB03;
    if_def = &IF_1N : 1N : R : 7680.0 MHz : U : 1 MHz : 0 Hz;
    if_def = &IF_2N : 2N : R : 1600.0 MHz : U : 1 MHz : 0 Hz;
    if_def = &IF_3N : 3N : R : 8080.0 MHz : U : 1 MHz : 0 Hz;
  enddef;
$PHASE_CAL_DETECT;
  def Standard;
    phase_cal_detect = &U_cal : 1;
  enddef;
$PASS_ORDER;
  def C1-WB01;
    pass_order =   1A :   1B :   2A :   2B :   3A :   3B :   4A :   4B :   5A :   5B :   6A :   6B :   7A :   7B :   8A :   8B :   9A :   9B :  10A :  10B :  11A :  11B :  12A :  12B;
  enddef;
$ROLL;
  def CDP-WBCA-WB01;
    roll = off;
  enddef;
$SITE;
  def GILCREEK;
    site_type = fixed;
    site_name = GILCREEK;
    site_ID = Gc;
mk4_site_ID = A;  * Inserted by stcodes program
    site_position = -2281547.291 m : -1453645.072 m :  5756993.153 m;
    horizon_map_az =    .0 deg :  20.0 :  50.0 :  90.0 : 140.0 : 150.0 : 160.0 : 180.0 : 205.0 : 225.0 : 290.0 : 340.0 : 360.0;
    horizon_map_el =  17.0 deg :  10.0 :   5.0 :   5.0 :  10.0 :  12.0 :  12.0 :  17.0 :   8.0 :   5.0 :   5.0 :  11.0 :  17.0;
    occupation_code = 40476601;
  enddef;
  def MATERA;
    site_type = fixed;
    site_name = MATERA;
    site_ID = Ma;
mk4_site_ID = I;  * Inserted by stcodes program
    site_position =  4641938.783 m :  1393003.026 m :  4133325.523 m;
    occupation_code = 72435701;
  enddef;
  def TSUKUB32;
    site_type = fixed;
    site_name = TSUKUB32;
    site_ID = Ts;
mk4_site_ID = T;  * Inserted by stcodes program
    site_position = -3957408.751 m :  3310229.347 m :  3737494.836 m;
    occupation_code = 73452301;
  enddef;
$SOURCE;
  def 0552+398;
    source_type = star;
    source_name = 0552+398;
    IAU_name = 0552+398;
    ra = 05h55m30.80561s;
    dec = 39d48'49.1650";
    ref_coord_frame = J2000;
  enddef;
$TRACKS;
  def C1-WB01;
    bits/sample = 1;
    multiplex_ratio = 1;
    fanout_def = A : &Ch01 : sign : 1 : 18;
    fanout_def = A : &Ch02 : sign : 1 : 04;
    fanout_def = A : &Ch03 : sign : 1 : 20;
    fanout_def = A : &Ch04 : sign : 1 : 06;
    fanout_def = A : &Ch05 : sign : 1 : 22;
    fanout_def = A : &Ch06 : sign : 1 : 08;
    fanout_def = A : &Ch07 : sign : 1 : 24;
    fanout_def = A : &Ch08 : sign : 1 : 10;
    fanout_def = A : &Ch09 : sign : 1 : 26;
    fanout_def = A : &Ch10 : sign : 1 : 12;
    fanout_def = A : &Ch11 : sign : 1 : 28;
    fanout_def = A : &Ch12 : sign : 1 : 14;
    fanout_def = A : &Ch13 : sign : 1 : 30;
    fanout_def = A : &Ch14 : sign : 1 : 16;
    fanout_def = B : &Ch01 : sign : 1 : 19;
    fanout_def = B : &Ch02 : sign : 1 : 05;
    fanout_def = B : &Ch03 : sign : 1 : 21;
    fanout_def = B : &Ch04 : sign : 1 : 07;
    fanout_def = B : &Ch05 : sign : 1 : 23;
    fanout_def = B : &Ch06 : sign : 1 : 09;
    fanout_def = B : &Ch07 : sign : 1 : 25;
    fanout_def = B : &Ch08 : sign : 1 : 11;
    fanout_def = B : &Ch09 : sign : 1 : 27;
    fanout_def = B : &Ch10 : sign : 1 : 13;
    fanout_def = B : &Ch11 : sign : 1 : 29;
    fanout_def = B : &Ch12 : sign : 1 : 15;
    fanout_def = B : &Ch13 : sign : 1 : 31;
    fanout_def = B : &Ch14 : sign : 1 : 17;
  enddef;
  def Mark3A_format;
    track_frame_format = Mark3A;
  enddef;
  def Mark4_format;
    track_frame_format = Mark4;
  enddef;
* 1999-02-03
*-------------------------
$EVEX_REV;
*-------------------------
rev = 1.0;
$EVEX;


def 2843_std;
  corr_exp#   = 2843;
*
  ovex_file   = /correlator/data/2843/2843.ovex;
  lvex_file   = /correlator/data/2843/2843.lvex;
  cvex_file   = /correlator/sysvex/global.cvex;
  svex_file   = /correlator/sysvex/global.svex;
*
  AP_length   = 1.0 sec;
  speedup_factor = 1.0;
*
  ref $CORR_CONFIG = C32-4;
  ref $SU_CONFIG  = std;
*
  tape_mode   = random;
  mirror    = allocate : compare : no_save;
 enddef;
* System cvex file
*
*Example of VEX task-specific correlator configuation file (.cvex).
*The appropriate $CORR_CONFIG key will be specified for every task in order to
*properly set up the correlator.
*
*Notes:
*  1. Parameters beginning with '~' are pseudo-parameters to replaced by integers at setup.
*
*ARW 991208 
* Revised:  2000 July 19, KAD & JAB 
*
*-----------------------------------------------------------------------------------------------
$CVEX_REV;
*-----------------------------------------------------------------------------------------------
*
rev = 1.0;
*
*-----------------------------------------------------------------------------------------------
$CORR_CONFIG;
*
  def D32-16NA;                  *2 bds, 32 cmplx lags, 16 chns/stn, 6 stns max - 14 baselines only
                                 * NA = no autocorrelations 
                                 *Note: REQUIRES NON-STANDARD SU-TO-CORRELATOR CONNECTIONS (NSTD2)
    ref $CORR_MODE = D32-16;
    ignore_chan_names = off ;    *if 'on', assign virtual chan by SU output position
                                 *instead of by chan name
    auto_corr = off;             *suppress auto-correlations
  enddef;
*-----------------------------------------------------------------------------------------------
$CORR_MODE;
*
  def D32-16;               *6 stations max, 32 lags, 16 chans/stn - 2 boards; 14 baselines only
                            *Note:  REQUIRES NON-STANDARD SU-TO-CORRELATOR CONNECTIONS 
                            * Note this uses two boards in one slice 
  *        ------board-----    bd    sect    strt   SU       SU      sect    strt   SU       SU
  *        segment   slice   parms   mode    chip  chan     chan     mode    chip  chan     chan
  *                                                (ref)    (rem)                  (ref)    (rem)
    board = ~seg0 : ~slice0 : std1 : S32-6  :  0 : ~chn0  : ~chn0  : S32-6  :  4 : ~chn1  : ~chn1  :
                                     S32-6  :  8 : ~chn2  : ~chn2  : S32-6  : 12 : ~chn3  : ~chn3  :
                                     S32-6  : 16 : ~chn4  : ~chn4  : S32-6  : 20 : ~chn5  : ~chn5  :
                                     S32-6  : 24 : ~chn6  : ~chn6  : S32-6  : 28 : ~chn7  : ~chn7  ;
    board = ~seg1 : ~slice0 : std1 : S32-6  :  0 : ~chn8  : ~chn8  : S32-6  :  4 : ~chn9  : ~chn9  :
                                     S32-6  :  8 : ~chn10 : ~chn10 : S32-6  : 12 : ~chn11 : ~chn11 :
                                     S32-6  : 16 : ~chn12 : ~chn12 : S32-6  : 20 : ~chn13 : ~chn13 :
                                     S32-6  : 24 : ~chn14 : ~chn14 : S32-6  : 28 : ~chn15 : ~chn15 ;
  enddef;
*
*-----------------------------------------------------------------------------------------------
$CORR_BD_PARMS;
*-----------------------------------------------------------------------------------------------
*
*Specifies board-wide correlation parameters
*
  def std1;
  *
    accum_divide_ratio =   1   ;            *wrt SU data rate
  *
  *                       Over   Over
  *                       BOCF   Data
    shsmp_divide_ratio =   1   :  1  ;      *wrt SU data rate
  *
    sample_count_per_lag_enable = on  ;
  *
  enddef;
*
*-----------------------------------------------------------------------------------------------
$CORR_SECTION_MODE;
*
  def S32-6;
*   Note: This mode does not support baseline ~stn4/~stn5.
*         Auto-corr done only on ~stn0,~stn1,~stn2,~stn3. *      rem 
*                rel   -----------chip inputs-----------  *       0  1  2  3  4  5
*               chip#  --X0--   --X1--   --X2--   --X3--  *    |------------------
*   Chip mode B7: X0/X2, X0/X3, X1/X2, X1/X3 cross        * r 0|  3  3  0  0  1  1
    chip = B7  :  0  : ~stn0  : ~stn1  : ~stn2  : ~stn3  ;* e 1|     3  0  0  1  1
    chip = B7  :  1  : ~stn0  : ~stn1  : ~stn4  : ~stn5  ;* f 2|        3  3  2  2
    chip = B7  :  2  : ~stn2  : ~stn3  : ~stn4  : ~stn5  ;*   3|           3  2  2
*   Chip mode B13: X0/X3, X1/X2 cross; X0,X1,X2,X3 auto   *   4|                 -
    chip = B13 :  3  : ~stn0  : ~stn2  : ~stn3  : ~stn1  ;*   5| 
  enddef;
*
*-----------------------------------------------------------------------------------------------
$CORR_CHIP_MODE;
*-----------------------------------------------------------------------------------------------
*
*For each block within a chip, specifies all internal chip signal-multiplexor settings
*(except for the selection of the inputs X0, X1, X2, X3) and the block 'type' as a keyword
*reference to the $CORR_BLOCK_MODE section.  Also specifies all correlation 'snakes' within
*the chip.
*
*Note: The first field in the 'block=' statement is a reference to the relevant 
*      $CORR_BLOCK_MODE keyword.
*
  def B7;
  *                     -mux settings- 
  *                 blk  M0  M1  M2  M3     
    block = CHEAD  : A0 : 0 : 3 : 0 : 3 ; *            rem 
    block = CHEAD  : A1 : 0 : 3 : 0 : 4 ; *             X0   X1   X2   X3 
    block = CHEAD  : A2 : 0 : 3 : 0 : 3 ; *          |-------------------
    block = CHEAD  : A3 : 0 : 3 : 0 : 4 ; *   ref  X0|           32C  32C
    block = CDTAIL : B0 : 0 : 3 : 0 : 3 ; *        X1|           32C  32C
    block = CDTAIL : B1 : 0 : 5 : 0 : 4 ; *        X2|
    block = CDTAIL : B2 : 0 : 3 : 0 : 3 ; *        X3|
    block = CDTAIL : B3 : 0 : 5 : 0 : 4 ;
  *
  *          type     ref  rem ----snake----------------
    snake = complex : X0 : X3 : A0l-: B2l;
    snake = complex : X0 : X2 : A1l-: B3l;
    snake = complex : X1 : X2 : A2l-: B0l;
    snake = complex : X1 : X3 : A3l-: B1l;
  enddef;
*
  def B13;
  *                     -mux settings-
  *                 blk  M0  M1  M2  M3
    block = CHEAD  : A0 : 0 : 3 : 0 : 3 ; *            rem 
    block = AUTO   : A1 : 0 : 2 : 1 : 1 ; *             X0   X1   X2   X3
    block = CHEAD  : A2 : 0 : 3 : 0 : 3 ; *          |-------------------
    block = AUTO   : A3 : 0 : 2 : 1 : 1 ; *   ref  X0| 32A            32C
    block = CDTAIL : B0 : 0 : 3 : 0 : 3 ; *        X1|      32A  32C
    block = AUTO   : B1 : 0 : 2 : 1 : 1 ; *        X2|           32A
    block = CDTAIL : B2 : 0 : 3 : 0 : 3 ; *        X3|                32A
    block = AUTO   : B3 : 0 : 2 : 1 : 1 ;
  *
  *          type     ref  rem  ----snake----------------
    snake = complex : X0 : X3 : A0l-: B2l;
    snake = complex : X1 : X2 : A2l-: B0l;
    snake = auto    : X0 :    : A1l : A1r;
    snake = auto    : X1 :    : A3l : A3r;
    snake = auto    : X2 :    : B3l : B3r;
    snake = auto    : X3 :    : B1l : B1r;
   enddef;
*
*-----------------------------------------------------------------------------------------------
$CORR_BLOCK_MODE;
*-----------------------------------------------------------------------------------------------
*
  def CHEAD; * Complex head 
  *                l_cell r_cell
    rotator_mode =    3  :  3  ;        *multiply data by sinusoid
    xdelay =          0  :  0  ;        *xdelay=0
    ydelay =          0  :  0  ;        *ydelay=0
    tap_motion_enable =     0  ;        *disable tap motion; lock to zero delay
    header_mode =           1  ;        *force sample data invalid during header
    invalid_on_tap_motion = 1  ;        *invalidate data on tap motion
  enddef;
*
  def CDTAIL; * Complex tail with delay 
  *               l_cell r_cell
    rotator_mode =   0  :   0  ;        *pass data samples thru unchanged
    xdelay =         0  :   0  ;        *xdelay=0
    ydelay =         1  :   1  ;        *ydelay=1
    tap_motion_enable =     1  ;        *enable tap motion
    header_mode =           1  ;        *force sample data invalid during header
    invalid_on_tap_motion = 1  ;        *invalidate data on tap motion
  enddef;
*
  def AUTO; * Autocorrelation head 
  *                l_cell r_cell
    rotator_mode =   0   :  0  ;        *pass data samples thru unchanged
    xdelay =         0   :  0  ;        *xdelay=0
    ydelay =         0   :  0  ;        *ydelay=0 on left; ydelay=0 on right
    tap_motion_enable =     0  ;        *disable tap motion; lock to zero delay
    header_mode =           1  ;        *force sample data invalid during header
    invalid_on_tap_motion = 0  ;        *irrelevant (no tap motion)
  enddef;
*Sample svex file
*
*Example of VEX task-specific SU configuation file (.svex).
*The appropriate $SU_CONFIG key will be specified for every task in order to
*properly set up each station unit.
*
*Notes:
*  1. Parameters beginning with '~' are to be determined at setup time.
*
*ARW 981116
* 
*-----------------------------------------------------------------------------------------------
$SVEX_REV;
*-----------------------------------------------------------------------------------------------
*
rev = 1.0;
*
*-----------------------------------------------------------------------------------------------
$SU_CONFIG;
*-----------------------------------------------------------------------------------------------
*
    def std;
	  ref $SU_CHAN_OUT = std;
	  ref $PCM_CONFIG = 4x4;
	enddef;
*

*-----------------------------------------------------------------------------------------------
$SU_CHAN_OUT;             *key specified in evex file
*-----------------------------------------------------------------------------------------------
*
*The 'channel_out_assignment =' statement assigns recorded channels to specific CRM output
*channels. If 'channel_out_assignment=' statement not present, CRM output channels are assigned
*in the order defined in the $FREQ section.
*
*If 'pcal freq-x' fields are left null, phase-cal frequencies specified in $PHASE_CAL_DETECT
*section will be used by default.
*
   def std;
  *  
  *                         SU-out  recorded      pcal        pcal
  *                         Chan#   chan ID      freq_a      freq_b
    channel_out_assignment =  0   : &Ch01    :   10000 Hz :  1.01 MHz ;  *phase-cal freqs
                                                                         *usually defaulted
    channel_out_assignment =  1   : &Ch02    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment =  2   : &Ch03    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment =  3   : &Ch04    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment =  4   : &Ch05    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment =  5   : &Ch06    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment =  6   : &Ch07    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment =  7   : &Ch08    :   10000 Hz :  1.01 MHz ;

    channel_out_assignment =  8   : &Ch09    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment =  9   : &Ch10    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment = 10   : &Ch11    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment = 11   : &Ch12    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment = 12   : &Ch13    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment = 13   : &Ch14    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment = 14   : &Ch15    :   10000 Hz :  1.01 MHz ;
    channel_out_assignment = 15   : &Ch16    :   10000 Hz :  1.01 MHz ;
  enddef;
*

*-----------------------------------------------------------------------------------------------
$PCM_CONFIG;            *key specified in evex file
*-----------------------------------------------------------------------------------------------
*
*Specifies algorithm for digital tone extraction by PCM for one channel.
*'~freq_x' are replaced by tone numbers specified in 'channel_out_assignment=' statement of
*$CRM_CONFIG (or corresponding defaults).
*The normalized correlation coefficients are computed as the (dot product of the specified
*counter values and the corresponding coefficient vector) divided by the Vldty count.
*The validity count is always in counter 8.
*See Mark IV memo #133 for explanation of normalization coeficients.
*
  def 4x4;   *4-level data, 4-level rotator; 2 tones/channel
  *       $PCM_TABLES                 MSB        LSB        Vldty
  *             ref    freq           ctr# coef  ctr# coef   ctr    coef
    phase_cal = 4x4 : ~freq_a :  sin : 1 : 1.96 : 0 : 0.98 :  8  : -1.47 ;
    phase_cal = 4x4 : ~freq_a :  cos : 3 : 1.96 : 2 : 0.98 :  8  : -1.47 ;
    phase_cal = 4x4 : ~freq_b :  sin : 5 : 1.96 : 4 : 0.98 :  8  : -1.47 ;
    phase_cal = 4x4 : ~freq_b :  cos : 7 : 1.96 : 6 : 0.98 :  8  : -1.47 ;
  enddef;
*
*-----------------------------------------------------------------------------------------------
$PCM_TABLES;
*-----------------------------------------------------------------------------------------------
*
*Specifies contents of tables to be downloaded to PCM (see Mark IV memo 133).
*One full period of must be specified in tabular form.
*
  def 4x4;
*                sample
*                 value        0   30  60 90  120 150 180 210 240 270 300 330 deg
    table_values=   3 :  sin : 2 : 3 : 3 : 3 : 3 : 2 : 1 : 0 : 0 : 0 : 0 : 1 ;  *>200mv
    table_values=   2 :  sin : 2 : 2 : 2 : 2 : 2 : 2 : 1 : 1 : 1 : 1 : 1 : 1 ;  *0 to 200mv
    table_values=   1 :  sin : 1 : 1 : 1 : 1 : 1 : 1 : 2 : 2 : 2 : 2 : 2 : 2 ;  *0 to -200 mv
    table_values=   0 :  sin : 1 : 0 : 0 : 0 : 0 : 1 : 2 : 3 : 3 : 3 : 3 : 2 ;  *<-200mv
    table_values=   3 :  cos : 3 : 3 : 2 : 1 : 0 : 0 : 0 : 0 : 1 : 2 : 3 : 3 ;  *>200mv
    table_values=   2 :  cos : 2 : 2 : 2 : 1 : 1 : 1 : 1 : 1 : 1 : 2 : 2 : 2 ;  *0 to 200mv
    table_values=   1 :  cos : 1 : 1 : 1 : 2 : 2 : 2 : 2 : 2 : 2 : 1 : 1 : 1 ;  *0 to -200 mv
    table_values=   0 :  cos : 0 : 0 : 1 : 2 : 3 : 3 : 3 : 3 : 2 : 1 : 0 : 0 ;  *<-200mv
    tabular_delta_phase = 30 deg;
  enddef;
$LVEX_REV;
rev = 1.0;
$LOG;
*
*Summary of /corr0/logs/ca075gc.log for GILCREEK. Station ID A. FS version 
*
  def A;
* A  1999.321.17:00:25.73;"weather - overcast skies
    scan 321-1701_0552+398;
      VSN = HST00215;
      head_pos = 55.0 um;
      start_tape = 1999y321d17h00m50s : 08896 ft : 0 in/sec;
      stop_tape =  1999y321d17h02m20s : 09496 ft ;
      source = 0552+398;
    endscan;
*   scan 321-1751_1606+106;
*     VSN = HST00215;
*     head_pos = 55.0 um;
*     start_tape = 1999y321d17h51m24s : 16969 ft : 0 in/sec;
*     stop_tape =  1999y321d17h52m54s : 17568 ft ;
*     source = 1606+106;
*   endscan;
*   scan 321-1755_0552+398;
*     VSN = HST00215;
*     head_pos = 55.0 um;
*     start_tape = 1999y321d17h54m58s : 17770 ft : 0 in/sec;
*     stop_tape =  1999y321d17h56m28s : 17171 ft ;
*     source = 0552+398;
*   endscan;
* A  1999.321.17:58:19.74;"**antenna tracking computer failed at 1750ut
* A  1999.321.17:58:51.68;"**missed 3 sources from 1751 thru 1800
*   scan 321-1759_0823+033;
*     VSN = HST00215;
*     head_pos = 55.0 um;
*     start_tape = 1999y321d17h58m56s : 17171 ft : 0 in/sec;
*     stop_tape =  1999y321d18h00m26s : 16571 ft ;
*     source = 0823+033;
*   endscan;
* A  1999.321.18:00:37.53;"weather - overcast skies
* A  1999.321.18:02:59.07;"now doing cable length check
* A  1999.321.18:03:11.03;"adding extra cable
* A  1999.321.18:04:17.54;"removing extra cable
* A  1999.321.18:05:20.53;"shorter cable is higher measurement
  enddef;
*
*Summary of /corr0/logs/ca075ma.log for MATERA20. Station ID I. FS version 
*
  def I;
    scan 321-1701_0552+398;
      VSN = EVNT0484;
      head_pos = 110.0 um;
      start_tape = 1999y321d17h00m50s : 11913 ft : 0 in/sec;
      stop_tape =  1999y321d17h02m20s : 11314 ft ;
      source = 0552+398;
    endscan;
* I  1999.321.18:09:16.77;"partially cloudy sky
* I  1999.321.18:09:45.19;"at completion time the recorder umidity is 31%
* I  1999.321.18:09:52.93;"original cable
* I  1999.321.18:10:29.51;"longer cable
* I  1999.321.18:12:00.14;"longer cable, shorter time
  enddef;
*
*Summary of /corr0/logs/ca075ts.log for TSUKUB32. Station ID T. FS version 
*
  def T;
* T  1999.321.17:00:18.10;"Sky is rainy.
    scan 321-1701_0552+398;
      VSN = HST00214;
      head_pos = 55.0 um;
      start_tape = 1999y321d17h00m50s : 05688 ft : 0 in/sec;
      stop_tape =  1999y321d17h02m20s : 06287 ft ;
      source = 0552+398;
    endscan;
* T  1999.321.18:05:09.30;"cable normal
* T  1999.321.18:07:41.47;"cable long
* T  1999.321.18:09:09.93;"cable normal again
* T  1999.321.18:10:52.65;"Cable change of 516.8 usec okey.(25cm)
* T  1999.321.18:11:06.45;"Longer cable increases reading.
* T  1999.321.18:11:49.64;"Sky is rainy.
  enddef;
* Revised:  2000 February 25, SRS 
* Revised:  2000 February  7, JAB 
*-------------------------
$IVEX_REV;
*-------------------------
rev = 1.0;

*-------------------------
$CORR_INIT;
*-------------------------
 def INIT_A;
  system_tempo = 1.00;
  bocf_period  = 16000000;  * 2 bocfs per second
  *
  ref $PBS_INIT = PBS_0;
  ref $PBS_INIT = PBS_1;
  ref $PBS_INIT = PBS_2;
  ref $PBS_INIT = PBS_3;
  ref $PBS_INIT = PBS_4;
  ref $PBS_INIT = PBS_5; 
  * 
  *                 corr   trmserve   CUCC    CUCC 
  *                 crate  env_name  port A  port B 
  CUCC_serial_ports = 0 :  TSERV0  :   9  :   10  ; 
  CUCC_serial_ports = 1 :  TSERV0  :  11  :   12  ; 
  *                                  port 
  analog_switch =          TSERV0  :  13  ; 
  start_stop_counter =     TSERV0  :  14  ; 
  CF_edit_mask = 0x0000 ; * correlator frame edit mask 
  *             measuremnt  swtch    OK range        fail 
  *                  name    pos   frm      to      action 
  timing_monitor =   CNTL0 :  9 : 0.5e-6 : 2.0e-6 :  0x0  ;
* timing_monitor =   CNTL1 : 10 : 0.5e-6 : 2.0e-6 :  0x0  ;
  timing_monitor =   TSPM  :  8 : 0.5e-6 : 2.0e-6 :  0x0  ;
  * 
 enddef;

*-------------------------
$PBS_INIT;
*-------------------------
 def PBS_0;
  SU_ID                =  0 : SU0; 
  * 
  *                  trmserve  console  dpu 
  *                  env_name   port    port 
  SUCC_serial_ports = TSERV0 :   1    :  2  ; 
  * 
  ref $DRIVE_INIT      =  DRIVE_A;
  ref $TRM_CONFIG      =  TRM1;
* ref $SU/CORR_CONNECT =  STD0;
* ref $SU/CORR_CONNECT =  NSTD1-0;
  ref $SU/CORR_CONNECT =  NSTD2-0;
  * 
  *                measuremnt  swtch    OK range        fail 
  *                   name      pos   frm      to      action 
  timing_monitor = Playback_0 :  0 : 0.5e-6 : 2.0e-6 :  0x0  ; 
  * 
 enddef;

 def PBS_1;
  SU_ID                =  1 : SU1;
  SUCC_serial_ports = TSERV0 :   3    :  4  ; 
  ref $DRIVE_INIT      =  DRIVE_B;
  ref $TRM_CONFIG      =  TRM1;
* ref $SU/CORR_CONNECT =  STD1;
* ref $SU/CORR_CONNECT =  NSTD1-1;
  ref $SU/CORR_CONNECT =  NSTD2-1;
  timing_monitor = Playback_1 :  1 : 0.5e-6 : 2.0e-6 :  0x0 ; 
 enddef;

 def PBS_2;
  SU_ID                =  2 : SU2; 
  SUCC_serial_ports = TSERV0 :   5    :  6  ; 
  ref $DRIVE_INIT      =  DRIVE_C;
  ref $TRM_CONFIG      =  TRM1;
* ref $SU/CORR_CONNECT =  STD2;
* ref $SU/CORR_CONNECT =  NSTD1-2;
  ref $SU/CORR_CONNECT =  NSTD2-2;
  timing_monitor = Playback_2 :  2 : 0.5e-6 : 2.0e-6 :  0x0  ; 
 enddef;

 def PBS_3;
  SU_ID                =  3 : SU3;
  SUCC_serial_ports = TSERV0 :   7    :  8  ; 
  ref $DRIVE_INIT      =  DRIVE_D;
  ref $TRM_CONFIG      =  TRM1;
* ref $SU/CORR_CONNECT =  STD3;
* ref $SU/CORR_CONNECT =  NSTD1-3;
  ref $SU/CORR_CONNECT =  NSTD2-3;
  timing_monitor = Playback_3 :  3 : 0.5e-6 : 2.0e-6 :  0x0  ; 
 enddef;

 def PBS_4;
  SU_ID                =  4 : SU4;
  SUCC_serial_ports = TSERV1 :   1    : 02  ; 
  ref $DRIVE_INIT      =  DRIVE_E;
  ref $TRM_CONFIG      =  TRM1;
* ref $SU/CORR_CONNECT =  STD4;
* ref $SU/CORR_CONNECT =  NSTD1-4;
  ref $SU/CORR_CONNECT =  NSTD2-4;
  timing_monitor = Playback_4 :  4 : 0.5e-6 : 2.0e-6 :  0x0  ; 
 enddef;

 def PBS_5;
  SU_ID                =  5 : SU5;
  SUCC_serial_ports = TSERV1 :   3    :  4  ; 
  ref $DRIVE_INIT      =  DRIVE_F;
  ref $TRM_CONFIG      =  TRM1;
* ref $SU/CORR_CONNECT =  STD5;
* ref $SU/CORR_CONNECT =  NSTD1-5;
  ref $SU/CORR_CONNECT =  NSTD2-5;
  timing_monitor = Playback_5 :  5 : 0.5e-6 : 2.0e-6 :  0x0  ; 
 enddef;

*-------------------------
$DRIVE_INIT;
*-------------------------
 def DRIVE_A;
  * MkIV drive, s/n 4603004AJ85
  drive_type     = Mark4; * Mark4|VLBA
  *             address    ID
  mcb_address = 0x2000 : 0x20;
  capstan_relative_diameter = 1.014;

  vacuum_setting    = 5 : 0x0c80 : 15 : 0x1450;  * @ HAYSTACK, drive 0
  tape_acceleration = 67.5 ;

 *                         hdstk   trks    DIMin   Eqlzr(Mbps)
  headstack/DIM_connect  =   1   : even  :   0   :   4;
  headstack/DIM_connect  =   1   :  odd  :   1   :   4;
 *                         hdstk    fwd    rev     eqlzr
* monitor_module_track   =   1   :   21  :  20   :   2;
  monitor_module_track   =   1   :   20  :  21   :   2; * NB! compensate for full pitch head offset

 *                       hdstk    fbias   rbias  fast_out slow_out fast_in slow_in pscale  nscale
 *                                                speed     speed    speed   speed
  headstack_parms    =     1   : -187.7: -185.9:   160.6:    15.0:  153.9:   13.9: 178.6:  179.1;   * 1997.07.16
 enddef;

 def DRIVE_B;
  * MkIV drive, s/n 4903059KD86
  drive_type     = Mark4;
  *             address    ID
  mcb_address = 0x2100 : 0x31;
  capstan_relative_diameter = 1.014;

  vacuum_setting    = 5 : 0x1600 : 15 : 0x1600; * @ HAYSTACK, drive 1
  tape_acceleration = 67.5 ;

 *                          hdstk trks DIMin Eqlzr(Mbps)
  headstack/DIM_connect  =   1   : even  :   0   :   4;
  headstack/DIM_connect  =   1   :  odd  :   1   :   4;

 *                           hdstk    fwd    rev     eqlzr
  monitor_module_track   =   1   :   21  :  20   :   2;

 *                       hdstk    fbias   rbias  fast_out slow_out fast_in slow_in pscale  nscale
 *                                                speed     speed    speed   speed
  headstack_parms    =     1   :  -80.8:  -89.2:   162.7:    17.9:  174.4:   18.0: 176.0:  177.2;   * 1999.04.07
 enddef;

 def DRIVE_C;
  * MkIV drive, s/n 5003093NJ86 @ HAYSTACK, drive #2
  drive_type     = Mark4;
  *             address    ID
  mcb_address = 0x2200 : 0x32;
  capstan_relative_diameter = 1.014;

  vacuum_setting    = 5 : 0x0dac : 15 : 0x0dac; * <<-- unknown vacuum values -- srs 1999.11.10
  tape_acceleration = 67.5 ;

 *                          hdstk trks DIMin Eqlzr(Mbps)
  headstack/DIM_connect  =   1   : even  :   0   :   4;
  headstack/DIM_connect  =   1   :  odd  :   1   :   4;

 *                           hdstk    fwd    rev     eqlzr
  monitor_module_track   =   1   :   21  :  20   :   2;

 *                       hdstk    fbias   rbias  fast_out slow_out fast_in slow_in pscale  nscale
 *                                                speed     speed    speed   speed
* headstack_parms    =     1   : -177.8 :-187.8:  229.8:    24.8:  225.4:   22.6: 171.7:  170.1;   * 1999.11.10
  headstack_parms    =     1   : -177.8 :-187.8:  248.0:    20.9:   94.4:   16.8: 171.7:  170.1;   * 1999.11.15 rjc
 enddef;

 def DRIVE_D;
  * MkIV drive, s/n 3400692GD78 @ HAYSTACK, drive #3
  drive_type     = Mark4;
  *             address    ID
  mcb_address = 0x2300 : 0x23;
  capstan_relative_diameter = 1.014;

  vacuum_setting    = 5 : 0x1200 : 15 : 0x1964; * changed 5" value, was 0xe74 1999.12.01 -- srs
  tape_acceleration = 67.5 ;

 *                          hdstk trks DIMin Eqlzr(Mbps)
  headstack/DIM_connect  =   1   : even  :   0   :   4;
  headstack/DIM_connect  =   1   :  odd  :   1   :   4;

 *                           hdstk    fwd    rev     eqlzr
  monitor_module_track   =   1   :   21  :  20   :   2;

 *                       hdstk    fbias   rbias  fast_out slow_out fast_in slow_in pscale  nscale
 *                                                speed     speed    speed   speed
  headstack_parms    =     1   : -171.7: -154.9:   157.7:    19.3:  153.4:   19.0: 164.5:  165.4;   * 1999.11.10
 enddef;

 def DRIVE_E;
  * MkIV drive, s/n 4302917RA85
  drive_type     = Mark4;
  *             address    ID
  mcb_address = 0x2400 : 0x34;
  capstan_relative_diameter = 1.014;

  vacuum_setting    = 5 : 0x0e10 : 15 : 0x170c; * @ HAYSTACK, drive 4
  tape_acceleration = 67.5 ;

 *                         hdstk   trks    DIMin   Eqlzr(Mbps)
  headstack/DIM_connect  =   1   : even  :   0   :   4;
  headstack/DIM_connect  =   1   :  odd  :   1   :   4;
  headstack/DIM_connect  =   1   : even  :   2   :   8;
  headstack/DIM_connect  =   1   :  odd  :   3   :   8;

 *                         hdstk    fwd    rev     eqlzr
  monitor_module_track   =   1   :   21  :  20   :   2;

 *                         hdstk    fbias   rbias  ffspeed  fsspeed rfspeed rsspeed pscale  nscale
  headstack_parms        =   1   :  -99.6:  -97.9:   190.2:    19.6:  181.9:   20.3: 173.6:  174.7;   * 2000.03.15
 enddef;

 def DRIVE_F;
  * MkIV drive, s/n 1302204CM79
  drive_type     = Mark4;
  *             address    ID
  mcb_address = 0x2500 : 0x25;
  capstan_relative_diameter = 1.014;

  vacuum_setting    = 5 : 0x0e00 : 15 : 0x16a8; * @ HAYSTACK, drive 5
  tape_acceleration = 67.5 ;

 *                         hdstk   trks    DIMin   Eqlzr(Mbps)
  headstack/DIM_connect  =   1   : even  :   0   :   4;
  headstack/DIM_connect  =   1   :  odd  :   1   :   4;
  headstack/DIM_connect  =   1   : even  :   2   :   8;
  headstack/DIM_connect  =   1   :  odd  :   3   :   8;

* 2000.03.22 -- for testing alternate pathways thru SU, ie DIM1 & TRMs 4->7
* headstack/DIM_connect  =   1   : even  :   0   :   8;
* headstack/DIM_connect  =   1   :  odd  :   1   :   8;
* headstack/DIM_connect  =   1   : even  :   2   :   4;
* headstack/DIM_connect  =   1   :  odd  :   3   :   4;
 *                         hdstk    fwd    rev     eqlzr
  monitor_module_track   =   1   :   21  :  20   :   2;

 *                         hdstk    fbias   rbias  ffspeed  fsspeed rfspeed rsspeed pscale  nscale
 * headstack_parms        =   1   : -107.9: -107.0:   149.2:     9.8:  178.5:   11.4: 171.0:  171.6;   * 2000.05.31 
 * 2000.06.21 by kad (after new head assembly replacement by dwf)
  headstack_parms        =   1   : -123.7: -128.0:   175.9:    17.1:  114.3:   11.1: 171.6:  173.3;
 enddef;

*-------------------------
$TRM_CONFIG;
*-------------------------
 def TRM1;
 *                           M  b/s
  TRM_order_within_channel = 4 : 2 : sign0 :  mag0  :  sign1 :  mag1 : sign2 :  mag2 : sign3 : mag3;
  TRM_order_within_channel = 2 : 2 : sign0 :  mag0  :  sign1 :  mag1;
  TRM_order_within_channel = 1 : 2 : sign0 :  mag0;
  TRM_order_within_channel = 4 : 1 : sign0 :  sign1 :  sign2 :  sign3;
  TRM_order_within_channel = 2 : 1 : sign0 :  sign1;
  TRM_order_within_channel = 1 : 1 : sign0;
 *
  parity_error_limit          =   0.10;  * 10% (for frame editting purposes only)

 *                                CRC    PErr   nosync  resync
  invalid_frame_control       =   on  :  on  :  off  :  on;
 enddef;

*-------------------------
$SU/CORR_CONNECT;


 *Following connections are for 16 channels from each of 6 playback units 
 * connected to Segments 0 & 1        rjc  2000.2.2
 *
 def NSTD2-0;
 *              SU   Corr   InputBd
 *            ChnGrp Segmt  ChnGrp
  SU_connect =  0 :  0  :    0;     * input board 0 / link 0A
  SU_connect =  1 :  0  :    8;     * input board 0 / link 4A
  SU_connect =  2 :  1  :    0;     * input board 1 / link 0A
  SU_connect =  3 :  1  :    8;     * input board 1 / link 4A
 enddef;

 def NSTD2-1;
 *              SU   Corr   InputBd
 *            ChnGrp Segmt  ChnGrp
  SU_connect =  0 :  0  :    1;     * input board 0 / link 0B
  SU_connect =  1 :  0  :    9;     * input board 0 / link 4B
  SU_connect =  2 :  1  :    1;     * input board 1 / link 0B
  SU_connect =  3 :  1  :    9;     * input board 1 / link 4B
 enddef;

 def NSTD2-2;
 *              SU   Corr   InputBd
 *            ChnGrp Segmt  ChnGrp
  SU_connect =  0 :  0  :    2;     * input board 0 / link 1A
  SU_connect =  1 :  0  :   10;     * input board 0 / link 5A
  SU_connect =  2 :  1  :    2;     * input board 1 / link 1A
  SU_connect =  3 :  1  :   10;     * input board 1 / link 5A
 enddef;

 def NSTD2-3;
 *              SU   Corr   InputBd
 *            ChnGrp Segmt  ChnGrp
  SU_connect =  0 :  0  :    3;     * input board 0 / link 1B
  SU_connect =  1 :  0  :   11;     * input board 0 / link 5B
  SU_connect =  2 :  1  :    3;     * input board 1 / link 1B
  SU_connect =  3 :  1  :   11;     * input board 1 / link 5B
 enddef;

 def NSTD2-4;
 *              SU   Corr   InputBd
 *            ChnGrp Segmt  ChnGrp
  SU_connect =  0 :  0  :    4;     * input board 0 / link 2A
  SU_connect =  1 :  0  :   12;     * input board 0 / link 6A
  SU_connect =  2 :  1  :    4;     * input board 1 / link 2A
  SU_connect =  3 :  1  :   12;     * input board 1 / link 6A
 enddef;

 def NSTD2-5;
 *              SU   Corr   InputBd
 *            ChnGrp Segmt  ChnGrp
  SU_connect =  0 :  0  :    5;     * input board 0 / link 2B
  SU_connect =  1 :  0  :   13;     * input board 0 / link 6B
  SU_connect =  2 :  1  :    5;     * input board 1 / link 2B
  SU_connect =  3 :  1  :   13;     * input board 1 / link 6B
 enddef;
