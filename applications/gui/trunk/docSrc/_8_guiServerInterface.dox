/**

\page guiServerProtocol guiServer Interface Protocol

\brief Detailed description of the communications protocol used to drive DiFX via the guiServer.

\tableofcontents

The DiFX GUI controls DiFX using a network connection to the <i>guiServer</i>
application running on the DiFX host.  Effectively the GUI is
only a visual front end - <i>guiServer</i> is where the actual
control takes place.  This document describes the network
connection(s) and communication protocol that act between the DiFX
GUI and <i>guiServer</i> - presumably any piece of software could
exploit this interface and control DiFX externally.

\section protocolConnecting Connecting

<i>GuiServer</i> needs to be started on the DiFX "host".  The
host can be any machine that has access to the DiFX applications (<i>vex2difx</i>,
<i>mpifxcorr</i>, etc.).  The user that starts <i>guiServer</i>
must be able to run these applications.  Once start, <i>guiServer</i>
maintains an open TCP server socket at a port specifed by:
<ul>
  <li>The last argument on the command line when <i>guiServer</i>
	is started, or failing that...</li>
  <li>The value of the DiFX environment variable
	"DIFX_MESSAGE_PORT", or if that doesn't exist...</li>
  <li>50200 by default.<br>
  </li>
</ul>
Once a client connection is made on this port a thread is spawned to
handle the communications, and the server waits for new connections
- all typical TCP stuff.  In theory any number of client
connections may be made to <i>guiServer</i>.

\subsection protocolConnectionProtocol Connection Protocol

The top-level connection between <i>guiServer</i>
and its client is bi-directional.  All communication, whether
from client to server or the reverse, follows a fairly trivial
"packet" protocol where each instruction, request, data block,
whatever, is transmitted as follows:

<table>
	<tr>
	  <td align="left" valign="top"><small>Packet ID<br>
		</small></td>
	  <td valign="top"><small>Integer (network byte order)<br>
		</small></td>
	  <td valign="top"><small>A unique integer identifying the
		  packet<br>
		</small></td>
	</tr>
	<tr>
	  <td align="left" valign="top"><small>Data bytes<br>
		</small></td>
	  <td valign="top"><small>Integer (network byte order)<br>
		</small></td>
	  <td valign="top"><small>Number of bytes that follow<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>Data<br>
		</small></td>
	  <td valign="top"><small>byte data (undefined order)<br>
		</small></td>
	  <td valign="top"><small>Packet content<br>
		</small></td>
	</tr>
</table>

The Packet ID should be recognized on both sides of the connection - the 
<i>guiServer</i> software will ignore any packet it does
not understand (however it will use the "data bytes" number to
completely read through and discard the data).  In addition
to the top-level connection, <i>guiServer</i> and the GUI can
make a number of other connections using this same protocol. 
What defines the difference between the connections is the list of
Packet IDs and what they mean.

This "packet" protocol rests on top of the TCP/IP "packet"
structure, and should not be confused with it.

\section protocolTopLevelPackets Top-Level Packets

The following Packet IDs are recognized by client, server, or
both at the top-level connection.  With each Packet ID is its
integer value, whether <i>guiServer</i> and/or the client is expected to
recognize and respond to it, and a brief description.  Follow
the links for each to get more information.

<table>
	<tr>
	  <td valign="top"><small><b>Packet ID</b><br>
		</small></td>
	  <td valign="top"><small><b>Int Value</b><br>
		</small></td>
	  <td valign="top"><small><i><b>guiServer</b></i><br>
		</small></td>
	  <td valign="top"><small><b>client</b><br>
		</small></td>
	  <td valign="top"><small><b>Description</b><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref relayPacket "RELAY_PACKET"
		</small></td>
	  <td valign="top"><small>1<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small>Turn on/off multicast relay, or relay
		  multicast packet to client<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref relayCommandPacket "RELAY_COMMAND_PACKET"
		</small></td>
	  <td valign="top"><small>2<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>Broadcast XML to DiFX processes using
		  multicast<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref commandPacket "COMMAND_PACKET"
		</small></td>
	  <td valign="top"><small>3<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>Send a command to <i>guiServer</i>
		  (usually to run a DiFX function)<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref informationPacket "INFORMATION_PACKET"
		</small></td>
	  <td valign="top"><small>4<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><i>guiServer</i> information for
		  client<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref informationPacket "WARNING_PACKET"
		</small></td>
	  <td valign="top"><small>5<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><i>guiServer</i> warning for client<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref informationPacket "ERROR_PACKET"
		</small></td>
	  <td valign="top"><small>6<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><i>guiServer</i> error for client<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref multicastSettingsPacket "MULTICAST_SETTINGS_PACKET"
		</small></td>
	  <td valign="top"><small>7<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>Change the multicast settings for the
		  <i>guiServer</i> DiFX monitor<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref guiServerVersion "GUISERVER_VERSION"
		</small></td>
	  <td valign="top"><small>8<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small>Request version information from <i>guiServer</i>
		  or report it to the client<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref guiServerDifxVersion "GUISERVER_DIFX_VERSION"
		</small></td>
	  <td valign="top"><small>9<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small>Report version of DiFX used to build <i>guiServer</i><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref availableDifxVersion "AVAILABLE_DIFX_VERSION"
		</small></td>
	  <td valign="top"><small>10<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small>Report a version of DiFX software the
		  <i>guiServer</i> can use<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref difxBase "DIFX_BASE"
		</small></td>
	  <td valign="top"><small>11<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><i></i>Base of DiFX software on the
		  host running <i>guiServer</i><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref guiServerEnvironment "GUISERVER_ENVIRONMENT"
		</small></td>
	  <td valign="top"><small>12<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small>Environment variable accessible to <i>guiServer</i><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref difxSetupPath "DIFX_SETUP_PATH"
		</small></td>
	  <td valign="top"><small>13<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>Path to the "execute" script<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref startDifxMonitor "START_DIFX_MONITOR"
		</small></td>
	  <td valign="top"><small>14<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>Start a <i>guiServer</i> thread to
		  monitor a job<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref difxRunLabel "DIFX_RUN_LABEL"
		</small></td>
	  <td valign="top"><small>15<br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>The "label" of the DiFX version that
		  should be used.<br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>\ref guiServerUser "GUISERVER_USER"
		</small></td>
	  <td valign="top"><small>16<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small>X<br>
		</small></td>
	  <td valign="top"><small>User that started <i>guiServer</i></small></td>
	</tr>
</table>
    
\subsection relayPacket RELAY_PACKET

This is a bi-directional packet type - both <i>guiServer</i> and
the client can use it.  It is used in the relay of DiFX
multicast (UDP) traffic on the DiFX host to the client.  If
sent to <i>guiServer</i>, the packet data is expected to be a
single integer in network byte order, either 1 to turn on, or 0 to
turn off multicast relay.  If packet relay is on, every
multicast message that <i>guiServer</i> sees will be relayed to
the client with a RELAY_PACKET, the data being a string containing
the multicast message.  All DiFX multicast messages are XML,
and will have to be parsed by the client to be useful.<br>

\subsection relayCommandPacket RELAY_COMMAND_PACKET

Many DiFX processes accept XML instructions over the multicast
network (primarily <i>mk5daemon</i>, but I believe there are
others).  For the most part <i>guiServer</i> replaces the
functionality of this system, but there may be commands that it
cannot perform.  This packet type can be used in those
cases.  If received by <i>guiServer</i>, the data (an XML
string) will be sent as a multicast, to be picked up or ignored by
DiFX processes as they see fit.

\subsection informationPacket INFORMATION_PACKET, WARNING_PACKET, ERROR_PACKET

These packets are generated by <i>guiServer</i>.  They
contain information, a warning, or an error that <i>guiServer</i> encountered
in the form of a string.

\subsection multicastSettingsPacket MULTICAST_SETTINGS_PACKET

This packet can be used to change the group and port settings for
multicast messages that <i>guiServer</i> receives from
DiFX.  When set properly, <i>guiServer</i> will then be able to collect (and relay to the GUI)
broadcast messages from other DiFX processes (such as \ref runMk5daemon "mk5daemon").  
There are default values for these items; for the group:
  
<ul>
  <li>Following the command line argument "-mg" when starting <i>guiServer</i>,
	or if not included...</li>
  <li>The value of the environment variable "DIFX_MESSAGE_GROUP",
	but if that doesn't exist...</li>
  <li>A default value of "224.2.2.1".</li>
</ul>
For the port:<br>
<ul>
  <li>Following the command line argument "-mp" when starting <i>guiServer</i>,
	or if not included...</li>
  <li>The value of the environment variable "DIFX_MESSAGE_PORT", but
	if that doesn't exist...</li>
  <li>A default value of "50200".</li>
</ul>
The packet data is a string, with the group first and the port
second, separated by a newline character.  When this packet is
received, <i>guiServer </i>will change the settings for its
multicast monitoring.

\section handshakingPackets Initial Handshaking Packets

When the GUI makes a connection to <i>guiServer</i>, it requests
information about <i>guiServer</i> and its environment. 
This triggers a series of packets with different Packat IDs from <i>guiServer</i>
to the client.  It isn't critical that you do this when
making a connection, but it can tell you lots of information about
how <i>guiServer</i> will run DiFX.

\subsection guiServerVersion GUISERVER_VERSION

This packet, with zero-length data, is used by the client to
request version information from <i>guiServer</i>.  It
triggers the following packets, so the client needs to be ready
to receive them.

Once this request is received by <i>guiServer</i>, it will
respond using the same Packet ID, but with string data
containing the version of <i>guiServer</i> (or "unknown" if it
can't be determined).  This is a guiServer-specific version - it doesn't match the DiFX version.
        
\subsection guiServerDifxVersion GUISERVER_DIFX_VERSION

This packet contains, as a string, the version of DiFX that the
<i>guiServer</i> was compiled under.
        
\subsection difxBase DIFX_BASE

This packet contains the "base" of the DiFX software on the
DiFX host (as a string).  This value comes from the
environment variable "DIFX_BASE" (as defined on the DiFX host).  It can also be set using
the "-b" argument when <i>guiServer</i> is started.
        
\subsection guiServerUser GUISERVER_USER

This packet contains the user that started <i>guiServer</i>. 
The value is the result of a <code>\"getlogin()\"</code> function call.
        
\subsection availableDifxVersion AVAILABLE_DIFX_VERSION
      
This packet contains the name of a DiFX version that <i>guiServer</i>
has access to.  There can be any number of these.  The
values are found by <i>guiServer</i> through listing all files matching the name:
\verbatim[DIFX_BASE]/*/setup_difx.*\endverbatim  
The names of the extensions
of the <code>\"setup_difx.EXTENSION\"</code> files are assumed to be DiFX version
names.
        
\subsection guiServerEnvironment GUISERVER_ENVIRONMENT
      
This packet contains an environment variable, and its value,
separated by <code>\"=\"</code> in a string.  One of these packets is sent
by <i>guiServer</i> for each environment variable it has access
to.

\subsection difxSetupPath DIFX_SETUP_PATH

This packet contains the path to an "execution script" that is
used by <i>guiServer</i> to run DiFX functions.  When <i>guiServer</i>
runs a DiFX program (as an example, use <i>vex2difx</i>), it
inserts this script in a system command as follows:
  
<pre>	[DIFX_SETUP_PATH] vex2difx [ARGS]<br></pre>

Note that the string used for the DIFX_SETUP_PATH can be anything
you want - as long as it contains some method of executing the
commands that follow it.

The purpose of the DIFX_SETUP_PATH is to allow guiServer to execute
different versions of DiFX.  The execution script is used to
source the proper setup file for the version (putting in place all
of the correct values for environment variables), then execute the
command.
    
\subsection startDifxMonitor START_DIFX_MONITOR

This packet tells guiServer to start a new thread containing a
"DiFX monitor".  The packet contains a port number (in string
form) for a server port opened by the application <i>sending the
START_DIFX_MONITOR packet</i> (e.g. the GUI).  The DiFX
monitor thread will immediately attempt to make a TCP client
connection to the specified port (using the IP address the packet
came from).  When that is successful, an interactive session
is started between the client (the thread) and the server that
follows the same "packet protocol" described \ref protocolConnectionProtocol "above", but with a different set
of packet IDs and functions:

<table>
	<tr>
	  <td valign="top"><small><b>Packet ID</b></small></td>
	  <td valign="top"><small><b>Int Value</b></small></td>
	  <td valign="top"><small><b>thread</b></small></td>
	  <td valign="top"><small><b>server</b></small></td>
	  <td valign="top"><small><b>Description</b></small></td>
	</tr>
	<tr>
	  <td valign="top"><small>MESSAGE</small></td>
	  <td valign="top"><small>0<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>WARNING<br>
		</small></td>
	  <td valign="top"><small>1<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>ERROR<br>
		</small></td>
	  <td valign="top"><small>2<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>INPUT_FILE_PATH<br>
		</small></td>
	  <td valign="top"><small>3<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>CLOSE_CONNECTION<br>
		</small></td>
	  <td valign="top"><small>4<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>NUM_BASELINES<br>
		</small></td>
	  <td valign="top"><small>5<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>NUM_FREQUENCIES<br>
		</small></td>
	  <td valign="top"><small>6<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>BASELINE<br>
		</small></td>
	  <td valign="top"><small>7<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>FREQUENCY<br>
		</small></td>
	  <td valign="top"><small>8<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>NUM_SCANS<br>
		</small></td>
	  <td valign="top"><small>9<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>SCAN<br>
		</small></td>
	  <td valign="top"><small>10<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>TELESCOPE_1<br>
		</small></td>
	  <td valign="top"><small>11<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>TELESCOPE_2<br>
		</small></td>
	  <td valign="top"><small>12<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>CORRELATION_PRODUCTS<br>
		</small></td>
	  <td valign="top"><small>13<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>NUM_PHASE_CENTERS<br>
		</small></td>
	  <td valign="top"><small>14<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>PHASE_CENTER<br>
		</small></td>
	  <td valign="top"><small>15<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>NUM_PULSAR_BINS<br>
		</small></td>
	  <td valign="top"><small>16<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>PULSAR_BIN<br>
		</small></td>
	  <td valign="top"><small>17<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>NUM_POL_PRODUCTS<br>
		</small></td>
	  <td valign="top"><small>18<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>POL_PRODUCT<br>
		</small></td>
	  <td valign="top"><small>19<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>NEW_PRODUCT<br>
		</small></td>
	  <td valign="top"><small>20<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>AUTOCORRELATION<br>
		</small></td>
	  <td valign="top"><small>21<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>PRODUCT_REQUEST<br>
		</small></td>
	  <td valign="top"><small>22<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>START_PRODUCT_REQUEST<br>
		</small></td>
	  <td valign="top"><small>23<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>END_PRODUCT_REQUEST<br>
		</small></td>
	  <td valign="top"><small>24<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>VISIBILITY_DATA<br>
		</small></td>
	  <td valign="top"><small>25<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>AMPLITUDE_DATA<br>
		</small></td>
	  <td valign="top"><small>26<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>PHASE_DATA<br>
		</small></td>
	  <td valign="top"><small>27<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>LAG_DATA<br>
		</small></td>
	  <td valign="top"><small>28<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>END_VISIBILITY_BLOCK<br>
		</small></td>
	  <td valign="top"><small>29<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>JOB_NAME<br>
		</small></td>
	  <td valign="top"><small>30<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>OBS_CODE<br>
		</small></td>
	  <td valign="top"><small>31<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>SCAN_IDENTIFIER<br>
		</small></td>
	  <td valign="top"><small>32<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>SCAN_START_TIME<br>
		</small></td>
	  <td valign="top"><small>33<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>SCAN_END_TIME<br>
		</small></td>
	  <td valign="top"><small>34<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>SOURCE<br>
		</small></td>
	  <td valign="top"><small>35<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>SOURCE_RA<br>
		</small></td>
	  <td valign="top"><small>36<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
	<tr>
	  <td valign="top"><small>SOURCE_DEC<br>
		</small></td>
	  <td valign="top"><small>37<br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	  <td valign="top"><small><br>
		</small></td>
	</tr>
</table>

\subsection difxRunLabel DIFX_RUN_LABEL

This packet contains the "label" (as a string) of the DiFX
version that should be used when <i>guiServer</i> runs any DiFX
function.  The label was used to determine which "setup"
script to execute as part of any DiFX command.  However this
functionality has been replaced (and made more flexible) by the 
\ref difxSetupPath "DIFX_SETUP_PATH" packet, so this
packet probably has no effect at this time.

\subsection commandPacket COMMAND_PACKET

        
*/
